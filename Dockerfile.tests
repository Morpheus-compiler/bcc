FROM ubuntu:18.04

ARG LLVM_VERSION="8"
ENV LLVM_VERSION=$LLVM_VERSION

RUN apt-get update && apt-get install -y curl gnupg &&\
    llvmRepository="\n\
deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main\n\
deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic main\n\
deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-${LLVM_VERSION} main\n\
deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-${LLVM_VERSION} main\n" &&\
    echo $llvmRepository >> /etc/apt/sources.list && \
    curl -L https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -

RUN apt-get update && apt-get install -y \
      util-linux \
      bison \
      binutils-dev \
      cmake \
      flex \
      g++ \
      git \
      kmod \
      wget \
      libelf-dev \
      zlib1g-dev \
      libiberty-dev \
      libbfd-dev \
      libedit-dev \
      clang-${LLVM_VERSION} \
      libclang-${LLVM_VERSION}-dev \
      libclang-common-${LLVM_VERSION}-dev \
      libclang1-${LLVM_VERSION} \
      llvm-${LLVM_VERSION} \
      llvm-${LLVM_VERSION}-dev \
      llvm-${LLVM_VERSION}-runtime \
      libllvm${LLVM_VERSION} \
      systemtap-sdt-dev \
      sudo \
      iproute2 \
      python3 \
      python3-pip \
      python-pip \
      ethtool \
      arping \
      netperf \
      iperf \
      iputils-ping \
      bridge-utils \
      libtinfo5 \
      libtinfo-dev

RUN pip3 install pyroute2 netaddr dnslib cachetools
RUN pip install pyroute2==0.5.18 netaddr==0.8.0 dnslib==0.9.14 cachetools==3.1.1

RUN apt-get remove --purge --auto-remove cmake -y
RUN apt-get update && \
    apt-get install -y software-properties-common lsb-release && \
    apt-get clean all -y

RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | sudo tee /etc/apt/trusted.gpg.d/kitware.gpg > /dev/null
RUN apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main" -y
RUN apt-get update && apt-get install cmake -y

RUN add-apt-repository ppa:ubuntu-toolchain-r/test -y && apt-get update && apt-get install -y gcc-9 g++-9
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9

RUN mkdir -p /clang+llvm10 && \ 
    wget https://github.com/llvm/llvm-project/releases/download/llvmorg-10.0.1/clang+llvm-10.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz && \
    tar xf clang+llvm-10.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz -C clang+llvm10 --strip-components 1 && \
    rm clang+llvm-10.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz

RUN mkdir -p /bison-3.8 && \ 
    wget https://mirror.easyname.at/gnu/bison/bison-3.8.tar.gz && \
    tar -xvf bison-3.8.tar.gz -C bison-3.8 --strip-components 1 && \
    rm bison-3.8.tar.gz && \
    cd bison-3.8 && ./configure && make -j && make install && \
    cd .. && rm -rf bison-3.8

RUN wget -O ruby-install-0.7.0.tar.gz \
         https://github.com/postmodern/ruby-install/archive/v0.7.0.tar.gz && \
    tar -xzvf ruby-install-0.7.0.tar.gz && \
    cd ruby-install-0.7.0/ && \
    make install

RUN ruby-install --system ruby 2.6.0 -- --enable-dtrace
